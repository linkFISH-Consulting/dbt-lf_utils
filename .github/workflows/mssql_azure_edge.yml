# This workflow runs our dbt tests using MSSQL for every push and pull request on github.
name: MSSQL CI


# DISABLED, just for reference
# on:
#   push:
#     branches: [ main, ps_early_prep ]
#   pull_request:
#     branches: [ main, ps_early_prep ]

jobs:
  dbt-test:
    runs-on: ubuntu-latest

    services:
      mssql:
        image: mcr.microsoft.com/azure-sql-edge:latest
        env:
          ACCEPT_EULA: "Y"
          SA_PASSWORD: "BetterUseP0stgres!"
          MSSQL_PID: "Developer"
        ports:
          - 1433:1433
        options: >-
          --health-cmd="/opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P 'BetterUseP0stgres!' -Q 'SELECT 1' || exit 1" --health-interval=10s --health-timeout=5s --health-retries=5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install ODBC Driver
        run: |
          export MANDB_DISABLE=1
          if ! [[ "20.04 22.04 24.04 24.10" == *"$(grep VERSION_ID /etc/os-release | cut -d '"' -f 2)"* ]];
          then
              echo "Ubuntu $(grep VERSION_ID /etc/os-release | cut -d '"' -f 2) is not currently supported.";
              exit;
          fi

          curl -sSL -O https://packages.microsoft.com/config/ubuntu/$(grep VERSION_ID /etc/os-release | cut -d '"' -f 2)/packages-microsoft-prod.deb
          sudo dpkg -i packages-microsoft-prod.deb
          rm packages-microsoft-prod.deb

          sudo apt-get update
          sudo ACCEPT_EULA=Y MANDB_DISABLE=1 apt-get install -y --no-install-recommends msodbcsql18
          sudo ACCEPT_EULA=Y MANDB_DISABLE=1 apt-get install -y --no-install-recommends mssql-tools18
          echo 'export PATH="$PATH:/opt/mssql-tools18/bin"' >> ~/.bashrc
          source ~/.bashrc

      - name: Install dbt dependencies
        run: |
          pip install dbt-sqlserver
          export DBT_PROJECT_DIR=./unit_tests
          dbt deps

      - name: Wait for MSSQL to be ready
        run: |
          set -a
          source config/.env.cicd
          set +a
          for i in {1..10}; do
            if /opt/mssql-tools18/bin/sqlcmd -S "$LF_UTILS__MSSQL_HOST" -U "$LF_UTILS__MSSQL_USER" -P "$LF_UTILS__MSSQL_PASSWORD" -Q "SELECT 1" -C; then
              echo "MSSQL is ready!"
              exit 0
            fi
            echo "Waiting for MSSQL..."
            sleep 5
          done
          echo "MSSQL did not become ready in time!" >&2
          exit 1

      - name: Run dbt test
        run: |
          set -a
          source config/.env.cicd
          set +a
          export DBT_PROFILE=lf_utils_mssql
          export DBT_PROJECT_DIR=./unit_tests
          dbt debug
          dbt build --select _dummy_source
          dbt test
